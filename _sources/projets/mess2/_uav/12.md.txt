# Calibration

Two types of calibrations can be performed with the ACE Lab Hawks, a correction calibration for the object's boxy-fixed frame in the global frame, and a calibration of the flight controller's sensors.

## ROS2 VICON Driver Calibration

In VICON Tracker, whenever a tracked object is created, that object is assigned axes that correspond to the current global frame in VICON Tracker regardless of the local orientation of the object. To account for this, we find difference quaternions for each respective agent that are applied to all received measurements in the ROS2 VICON Driver node. These difference quaternions align the measurements to the agents' true body-fixed frames within the global frame.

**This calibration only needs to be performed when a new agent is added in VICON Tracker or if the position of the tracking pearls on the object is changed.**

We make several assumptions during the UAV calibration:
- The ground in the lab is relatively flat.
- Translating the UAV along a straight edge results does not change the UAV's roll, pitch, or yaw.
- This translation occurs in the direction of the UAV's body-fixed x-axis and is used to calculate the UAV's global yaw.
- The approximate global yaw is sufficient to find the UAV's true quaternion orientation in the global frame.

With these assumptions, we start the calibration. 

1. **Remove the previous calibration file (if any).**

Our modified version of the ROS2 VICON Driver checks the mess2 project directory for any calibration files for the current agent. In a terminal, navigate to the mess2 project directory. On the ACE Lab GCS, mess2 is installed in the home directory.

```zsh
cd ~/mess2
```

On the GCS, check to see whether there is a previous calibration file for the current agent:

```zsh
ls agents/AGENT_NAME/calibration.yaml
```

If `agents/AGENT_NAME/calibration.yaml` is printed in the terminal, you must delete it. 

Delete the previous calibration file:

```zsh
rm -f agents/AGENT_NAME/calibration.yaml
```

With the previous `calibration.yaml` file deleted (if any), the ROS2 VICON Driver node will not modify the raw measurements received from the DataStream SDK.

2. **Start the ROS2 VICON Driver.**

On the Windows machine, login and open VICON Tracker. Calibrate the system, ensuring that the axes wand is perfectly level, then start tracking the agent that you are calibrating.

Now, in a terminal on the GCS, start the driver node:

```zsh
ros2 launch vicon_receiver client.launch.py
```

As the node launches, it should display that it created a publisher segment for `AGENT_NAME`. If it does not, then you did not start tracking the agent in VICON Tracker.

3. **Launch the calibration nodes.**

Open another terminal on the GCS and launch the calibration nodes. Since we must move the UAV manually, both nodes can run on the GCS. Change `AGENT_NAME` and `1000` to the name of the current agent and the number of measurements you want to be collected at each position during the calibration.

```zsh
ros2 launch hawk_calibration mess2.launch.py agent_name:=AGENT_NAME num_measurements:=1000
```

In the same terminal, it will prompt you to press `Enter` to start collecting measurements at position one. If you have not done so already, move the UAV to its first position along the straight edge making sure that the body-fixed x-axis is in the direction of the future translation, then press `Enter`. You should see a progress percentage as feedback as measurements are recursively added to the average pose at position one.

Move the UAV to its second position along the straight edge. The terminal running the calibration nodes will prompt you to press`Enter` to start collecting measurements at position two. Once the progress percentage reaches 100%, the new calibration file will be automatically written to `~/mess2/agents/AGENT_NAME/calibration.yaml`.

Since the ROS2 VICON Driver reads the calibration files as the publisher segment is created, the node must be relaunched to observe any changes.

## Flight Controller Calibration